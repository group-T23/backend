# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test & Deploy BE

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  # run & test
  test:
    name: Run & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # server variables
      - name: Creating .env file
        uses: iamsauravsharma/create-dotenv@v1.2.2
        with:
          env-prefix: 'ENV_KEY_'
          file-name: '.env'
          directory: '.'
        env:
          ENV_KEY_PORT:         ${{ secrets.ENV_PORT }}
          ENV_KEY_EM_USER:      ${{ secrets.ENV_EM_USER }}
          ENV_KEY_EM_PASSWORD:  ${{ secrets.ENV_EM_PASS }}
          ENV_KEY_DB_NAME:      ${{ secrets.ENV_DB_USER }}
          ENV_KEY_DB_PASSWORD:  ${{ secrets.ENV_DB_PASS }}
          ENV_KEY_ACCESS_TOKEN: ${{ secrets.ENV_TOKEN }}
      
      - name: Setting up Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
            
      - name: Installing dependencies
        run: npm ci
        
      - name: Starting test server
        run: npm start &
      
      - name: Waiting for the server...
        run: sleep 5
        
      - name: Testing w/ Jest
        run: npm run test
        env:
          DB_NAME:                    ${{ secrets.ENV_DB_USER }}
          DB_PASSWORD:                ${{ secrets.ENV_DB_PASS }}
          SERVER:                     'http://localhost'
          PORT:                       ${{ secrets.ENV_PORT }}
          ACCESS_TOKEN:               ${{ secrets.ENV_TOKEN }}
        
  
  # deploy
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /var/www/backend
            git fetch origin master
            git reset --hard FETCH_HEAD
            git clean -d -f -e media
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            npm ci --omit=dev
            forever stop src/be.js
            forever start src/be.js
