# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy BE

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # node setup
  setup:
    name: Setup Node.js ${{ matrix.node-version }}
    strategy:
      matrix:
        node-version: [16.x] 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3  
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
  
  # dotenv(s) config
  create-env-files:
    name: Create env files
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      # server variables
      - uses: iamsauravsharma/create-dotenv@v1.2.2
        with:
          env-prefix: 'ENV_KEY_'
          file-name: '.env'
          directory: '.' # Optional (default: '.')
        env:
          ENV_KEY_PORT: ${{ secrets.ENV_PORT }}
          ENV_KEY_EM_USER: ${{ secrets.ENV_EM_USER }}
          ENV_KEY_EM_PASSWORD: ${{ secrets.ENV_EM_PASS }}
          ENV_KEY_DB_NAME: ${{ secrets.ENV_DB_USER }}
          ENV_KEY_DB_PASSWORD: ${{ secrets.ENV_DB_PASS }}
          ENV_KEY_ACCESS_TOKEN: ${{ secrets.ENV_TOKEN }}
      
      # jest variables
      - uses: iamsauravsharma/create-dotenv@v1.2.2
        with:
          env-prefix: 'JEST_KEY_'
          file-name: 'setEnvVars.js'
          directory: 'jest/' # Optional (default: '.')
        env:
          JEST_KEY_SERVER: ${{ secrets.ENV_SERVER }}
          JEST_KEY_PORT: ${{ secrets.ENV_PORT }}
          JEST_KEY_DB_NAME: ${{ secrets.ENV_DB_USER }}
          JEST_KEY_DB_PASSWORD: ${{ secrets.ENV_DB_PASS }}
          JEST_KEY_ACCESS_TOKEN: ${{ secrets.ENV_TOKEN }}
  
  # testing
  test:
    name: Running Jest
    strategy:
      matrix:
        node-version: [16.x] 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3  
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm test
  
  # deploy
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /var/www/backend
            git fetch origin master
            git reset --hard FETCH_HEAD
            git clean -d -f -e media
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            npm ci --omit=dev
            forever stop src/be.js
            forever start src/be.js
